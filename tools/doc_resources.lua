#!/usr/bin/lua
pcall(require, "luarocks.loader")
local pl = require "pl.import_into" ()
pl.stringx.import()
package.path = "../src/?.lua;" .. package.path
local resources = require "luatwit.resources"

-- read source code
local res_lines = pl.utils.readlines("../src/luatwit/resources.lua")
-- doc strings generated by 'get_api_desc.lua'
local desc_tbl = pl.pretty.read(pl.file.read("api_desc"))
assert(desc_tbl)
local doc_delta = {}

-- find existing doc positions and insert empty lines if needed
local i, n = 1, #res_lines
while i <= n do
    local method, url = res_lines[i]:match('^_M%.[^_].*{ (%w+), "(.*)"')
    if method and url then
        local doc_start
        for j = i-1, 1, -1 do
            if res_lines[j]:startswith("--- ") then
                doc_start = j
                break
            elseif not res_lines[j]:startswith("--") then
                break
            end
        end
        local key = method .. " " .. url
        if not doc_start then
            table.insert(res_lines, i, "")
            doc_delta[key] = 1
            i = i + 1
            n = n + 1
        else
            doc_delta[key] = i - doc_start
        end
    end
    i = i + 1
end

-- fill in documentation
for i, line in pairs(res_lines) do
    local method, url = line:match('^_M%.[^_].*{ (%w+), "(.*)"')
    if method and url then
        local key = method .. " " .. url
        local desc = desc_tbl[key]
        if desc then
            res_lines[i - doc_delta[key]] = "--- " .. desc
        end
    end
end

-- print result
pl.tablex.imap(print, res_lines)

